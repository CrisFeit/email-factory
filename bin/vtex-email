#! /usr/bin/env node

const { execSync } = require('child_process');

const runCommand = command => {
    try {
        execSync(`${command}`, { stdio: 'inherit' })
    } catch (error) {
        console.log(`Failed to execute ${command}`, error);
        return false
    }
    return true;
}

async function getPkgJsonDir() {
    const { dirname } = require('path');
    const { constants, promises: { access } } = require('fs');

    for (let path of module.paths) {
        try {
            let prospectivePkgJsonDir = dirname(path);
            await access(path, constants.F_OK);
            return prospectivePkgJsonDir;
        } catch (e) { }
    }
}

(async () => {
    const pkgJsonDir = await getPkgJsonDir();

    const cammandName = process.argv[2]

    const commandScript = cammandName == 'dev' ? `concurrently 'nodemon ${pkgJsonDir}/server/server.js' 'webpack serve --config ${pkgJsonDir}/webpack/webpack.dev.js'`
        : cammandName == 'build' ? `webpack --config ${pkgJsonDir}/webpack/webpack.prod.js && node node_modules/vtex-email-framework/webpack/webpack.dist.js && jest`
            : cammandName

    const checkedOut = runCommand(commandScript);
    if (!checkedOut) process.exit(-1);
})();